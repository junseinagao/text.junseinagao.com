---
import dayjs from "dayjs";
import { PostType } from "../lib/rss-model";

interface Post {
  title: string;
  description: string;
  link: string;
  thumbnailImage: string;
  postType: PostType;
  publishDate: Date;
  tags: string[];
}

const post = Astro.props as Post;

function getIconPath(postType: PostType): string | null {
  switch (postType) {
    case PostType.Zenn:
      return "/images/zenn-icon.svg";
    case PostType.Qiita:
      return "/images/qiita-icon.png";
    case PostType.Note:
      return "/images/note-icon.svg";
    default:
      return null;
  }
}

function getPostTypeLabel(postType: PostType): string {
  switch (postType) {
    case PostType.MarkdownPost:
      return "";
    case PostType.Note:
      return "Note";
    case PostType.Zenn:
      return "Zenn";
    case PostType.Qiita:
      return "Qiita";
    default:
      return "";
  }
}

function getAnchorLinkAttribute(postType: PostType) {
  switch (postType) {
    case PostType.MarkdownPost:
      return {};
    case PostType.Note:
    case PostType.Zenn:
    case PostType.Qiita:
      return { target: "_blank", rel: "noopener noreferrer" };
    default:
      return {};
  }
}

const iconPath = getIconPath(post.postType);
---

<li class="block">
  <div class="flex h-full w-full max-w-xl items-start gap-y-8 gap-x-4">
    <a
      href={post.link}
      class="flex flex-col"
      {...getAnchorLinkAttribute(post.postType)}
    >
      <time
        class="inline-flex h-8 w-32 items-center justify-center rounded-md border border-solid border-brand-sub text-base text-current lg:text-xl"
      >
        {dayjs(post.publishDate).format("YYYY-MM-DD")}
      </time>
      {
        iconPath ? (
          <img
            src={iconPath}
            alt={`${getPostTypeLabel(post.postType)} icon`}
            class="h-32 w-32 rounded-3xl object-contain p-4"
          />
        ) : post.thumbnailImage ? (
          <img
            src={post.thumbnailImage}
            alt={post.title}
            class="h-32 w-32 rounded-3xl object-cover p-4"
          />
        ) : null
      }
    </a>
    <div class="group flex flex-1 flex-col items-stretch gap-4">
      <ul
        class="min-h-8 flex h-auto list-none flex-wrap gap-x-2 text-base lg:text-xl"
      >
        <li class="inline-block">{getPostTypeLabel(post.postType)}</li>
        {post.tags.map((tag) => <li class="inline-block">{tag}</li>)}
      </ul>
      <a
        href={post.link}
        class="link-hover flex flex-col gap-y-2"
        {...getAnchorLinkAttribute(post.postType)}
      >
        <h1 class="text-2xl text-current lg:text-4xl">{post.title}</h1>
        <p class="text-base text-current lg:text-xl">
          {post.description.slice(0, 50)}
          {post.description.length >= 50 && "..."}
        </p>
      </a>
    </div>
  </div>
</li>
